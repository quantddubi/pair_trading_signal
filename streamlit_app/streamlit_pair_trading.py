"""
페어트레이딩 분석 도구 - 메인 멀티페이지 앱
"""
import streamlit as st

# 페이지 설정
st.set_page_config(
    page_title="페어트레이딩 분석 도구",
    page_icon="⚡",
    layout="wide",
    initial_sidebar_state="expanded"
)

# 메인 페이지
st.title("페어트레이딩 분석 도구")
st.markdown("---")

# 웰컴 메시지
st.markdown("""
## 페어트레이딩 방법론별 장단점 분석

### 1. 유클리드 거리 기반
**장점:**
- 계산 속도가 매우 빠름 (3년 데이터 기준 실시간 처리 가능)
- 직관적이고 이해하기 쉬운 방법론
- 표준화된 가격 경로의 유사성을 정확히 측정
- 파라미터 조정이 간단함

**단점:**
- 장기 균형관계를 보장하지 못함
- 단순 1:1 헤지비율로 최적화 부족
- 과거 유사성이 미래를 보장하지 않음
- 시장 구조 변화에 취약

### 2. 공적분(Engle-Granger) 기반
**장점:**
- 통계적으로 가장 엄밀한 장기 균형관계 검증
- 최적 헤지비율 자동 계산
- 안정적이고 예측 가능한 스프레드
- 학술적으로 검증된 방법론

**단점:**
- 계산 시간이 오래 걸림 (ADF 테스트)
- 최소 252일 이상의 충분한 데이터 필요
- 유의한 공적분 관계를 찾기 어려움
- 공적분 관계가 깨질 수 있음 (재검정 필요)

### 3. 상관관계 레짐 전환 기반
**장점:**
- 시장 변화(합류/분화)를 빠르게 감지
- 단기 트레이딩 기회 포착에 유리
- 레짐 전환 타입별 전략 차별화 가능
- 롤링 윈도우로 동적 적응

**단점:**
- 잦은 거짓 신호 발생 가능
- 상관관계 ≠ 인과관계
- 변화가 일시적일 수 있음
- 윈도우 크기 선택이 결과에 큰 영향

### 4. OU 평균회귀 속도 기반
**장점:**
- 평균회귀 속도(κ)와 반감기 정량화
- 자본 효율성 극대화 (빠른 회전율)
- 품질 점수로 객관적 페어 평가
- 최적 진입/청산 타이밍 계산 가능

**단점:**
- 복잡한 수학적 모델링 필요 (MLE/AR)
- 모델 가정(정상성)이 현실과 다를 수 있음
- 파라미터 추정의 불안정성
- 시장 충격 시 모델 실패 가능

### 5. 클러스터링 기반
**장점:**
- 머신러닝으로 숨은 패턴 발견
- 10개 이상의 다차원 특징 활용
- 섹터/산업별 자동 그룹화
- 전통적 방법이 놓치는 페어 발굴

**단점:**
- 블랙박스 성격 (해석 어려움)
- 클러스터 개수(k) 선택의 임의성
- 특징 엔지니어링에 크게 의존
- 과적합 위험 존재

### 6. 코퓰라·순위상관 기반
**장점:**
- 비선형 의존성 포착 (선형 상관 한계 극복)
- 극단 사건 시 꼬리 의존성 측정
- Kendall/Spearman으로 이상치에 강건
- 리스크 관리에 특화 (하방 꼬리 중시)

**단점:**
- 계산 복잡도 높음
- 대량 데이터 필요 (꼬리 의존성)
- 이해하기 어려운 개념
- 정상 시장에서는 과도한 복잡성

---

## 추천 활용법

**왼쪽 사이드바**에서 원하는 방법론을 선택하여 분석을 시작

- **빠른 스크리닝**: 유클리드 거리
- **안정적 장기 전략**: 공적분
- **단기 기회**: 상관관계 레짐
- **자본 효율**: OU 평균회귀
- **섹터 분석**: 클러스터링
- **리스크 관리**: 코퓰라
""")

# 사이드바 안내
st.sidebar.markdown("""
## 방법론 선택

위의 **Pages** 섹션에서 원하는 방법론을 선택:

- **유클리드 거리**: 가장 빠르고 직관적
- **공적분**: 가장 엄밀하고 안정적  
- **상관관계 레짐**: 시장 변화에 민감
- **OU 평균회귀**: 타이밍에 특화
- **클러스터링**: 섹터 특성 활용
- **코퓰라 순위상관**: 극단 리스크 대응
""")

# 푸터
st.markdown("---")
